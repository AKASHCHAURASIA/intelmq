# -*- coding: utf-8 -*-
import json

from intelmq.lib.bot import Bot
from intelmq.lib import utils
from collections import OrderedDict


class IotMalwareParserBot(Bot):

    def process(self):
        report = self.receive_message()
        raw_report = utils.base64_decode(report.get("raw"))
        required = {'date', 'url', 'hash'}
        item = json.loads(raw_report, object_pairs_hook=OrderedDict)

        for data in item:
            event = self.new_event(report)
            event.add('classification.type', 'malware')
            event.add('classification.taxonomy', 'malacious code')
            if 'hash' in data:
                event.add('malware.hash.md5', data['hash'])
            if 'url' in data:
                event.add('source.url', data['url'])
            if 'date' in data:
                dt = data['date'] + " UTC"
                event.add('time.source', dt)
            event.add('raw', json.dumps(data))

            self.send_message(event)

        self.acknowledge_message()


BOT = IotMalwareParserBot
